{% autoescape false -%}
{% import 'macros.j2' as macros with context -%}

-- Users
INSERT INTO User (login, name, password) VALUES
("{{ initial_user.login }}", "{{ initial_user.name }}", "{{ initial_user.password }}");

-- Versions
{{ macros.insert("Version", 'name', '"{}"'.format(versions.first_version)) }}
{{ macros.insert("Version", 'name, '"left") }}
{{ macros.insert("Version", 'name, '"right") }}
{{ macros.insert("Version", 'name, '"top") }}
{{ macros.insert("Version", 'name, '"other") }}
{{ macros.insert("Version_requires", 'version_id, required_version_id', '2, 1')
}}
{{ macros.insert("Version_requires", 'version_id, required_version_id', '3, 1')
}}
{{ macros.insert("Version_requires", 'version_id, required_version_id', '3, 2')
}}
{{ macros.insert("Version_requires", 'version_id, required_version_id', '4, 2')
}}
{{ macros.insert("Version_requires", 'version_id, required_version_id', '4, 3')
}}

-- id base column
{{ macros.single_slots(base_columns.id,
    ("isa", "column"),
    ("frame_name", "base_id_column"),
    ("name", "{{ table.table_name }}_id"),
    ("type", "integer"),
    ("primary_key", True),
    ("null", False),
) }}

-- string_no_html_chars base column
{{ macros.single_slots(base_columns.string_no_html_chars,
    ("isa", "column"),
    ("frame_name", "base_string_no_html_chars_column"),
    ("type", "string"),
    ("max_len", 40),
    ("null", False),
    ("html_chars_allowed", False),
    ("display_html", False),
) }}

-- string_with_html_chars base column
{{ macros.single_slots(base_columns.string_with_html_chars,
    ("ako", '>base_string_no_html_chars_column'),
    ("frame_name", "base_string_with_html_chars_column"),
    ("html_chars_allowed", True),
) }}

-- html_string base column
{{ macros.single_slots(base_columns.html_string,
    ("ako", '>base_string_with_html_chars_column'),
    ("frame_name", "base_html_string_column"),
    ("display_html", True),
) }}

-- text_no_html_chars base column
{{ macros.single_slots(base_columns.text_no_html_chars,
    ("ako", '>base_string_no_html_chars_column'),
    ("frame_name", "base_text_no_html_chars_column"),
    ("max_len", 4096),
) }}

-- text_with_html_chars base column
{{ macros.single_slots(base_columns.text_with_html_chars,
    ("ako", '>base_string_with_html_chars_column'),
    ("frame_name", "base_text_with_html_chars_column"),
    ("max_len", 4096),
) }}

-- html_text base column
{{ macros.single_slots(base_columns.html_text,
    ("ako", '>base_html_string_column'),
    ("frame_name", "base_html_text_column"),
    ("max_len", 4096),
) }}

-- password base column
{{ macros.single_slots(base_columns.password,
    ("ako", '>base_string_with_html_chars_column'),
    ("frame_name", "base_password_column"),
    ("max_len", 1024),
    ("name", "password"),
    ("hide", True),
) }}

-- email base column
{{ macros.single_slots(base_columns.email,
    ("ako", '>base_string_with_html_chars_column'),
    ("frame_name", "base_email_column"),
    ("name", "email"),
    ("max_len", 1024),
) }}

-- name base column
{{ macros.single_slots(base_columns.name,
    ("ako", '>base_string_no_html_chars_column'),
    ("frame_name", "base_name_column"),
    ("name", "name"),
) }}

-- description base column
{{ macros.single_slots(base_columns.description,
    ("ako", '>base_text_with_html_chars_column'),
    ("frame_name", "base_description_column"),
    ("name", "description"),
) }}

-- date base column
{{ macros.single_slots(base_columns.date,
    ("isa", "column"),
    ("frame_name", "base_date_column"),
    ("type", "date"),
    ("name", "date"),
) }}

-- time base column
{{ macros.single_slots(base_columns.time,
    ("isa", "column"),
    ("frame_name", "base_time_column"),
    ("type", "time"),
    ("name", "time"),
) }}

-- timestamp base column
{{ macros.single_slots(base_columns.timestamp,
    ("isa", "column"),
    ("frame_name", "base_timestamp_column"),
    ("type", "timestamp"),
    ("name", "timestamp"),
) }}

-- who base column
{{ macros.single_slots(base_columns.who,
    ("isa", "column"),
    ("frame_name", "base_who_column"),
    ("type", "integer"),
    ("links_to", "User(user_id)"),
    ("check_foreign_key", True),
    ("name", "{{ frame.name_prefix }}_user_id"),
) }}

-- when base column
{{ macros.single_slots(base_columns.when,
    ("ako", '>base_timestamp_column'),
    ("frame_name", "base_when_column"),
    ("name", "{{ frame.name_prefix }}_timestamp"),
) }}

-- whodunit base column
{{ macros.single_slots(base_columns.whodunit,
    ("isa", "splice"),
    ("frame_name", "base_whodunit_columns"),
) }}
{{ macros.multi_slot(base_columns.whodunit, "column",
    '>base_who_column', '>base_when_column',
) }}

-- created base column
{{ macros.single_slots(base_columns.created,
    ("ako", '>base_whodunit_columns'),
    ("frame_name", "base_created_columns"),
    ("name_prefix", "created"),
    ("null", False),
) }}

-- updated base column
{{ macros.single_slots(base_columns.updated,
    ("ako", '>base_whodunit_columns'),
    ("frame_name", "base_updated_columns"),
    ("name_prefix", "updated"),
    ("null", True),
) }}

-- audit base column
{{ macros.single_slots(base_columns.audit,
    ("isa", "splice"),
    ("frame_name", "base_audit_columns"),
) }}
{{ macros.multi_slot(base_columns.audit, "column",
    '>base_created_columns', '>base_updated_columns',
) }}


-- id base table
{{ macros.single_slots(base_tables.id,
    ("isa", "table"),
    ("frame_name", "base_id_table"),
) }}
{{ macros.multi_slot(base_tables.id, "column",
    '>base_id_column',
) }}

-- audit base table
{{ macros.single_slots(base_tables.audit,
    ("isa", "table"),
    ("frame_name", "base_audit_table"),
) }}
{{ macros.multi_slot2(base_tables.audit, "column", 9000,
    '>base_audit_columns',
) }}

-- id_audit base table
{{ macros.single_slots(base_tables.id_audit,
    ("ako", '>base_id_table'),
    ("frame_name", "base_id_audit_table"),
) }}
{{ macros.multi_slot2(base_tables.id_audit, "column", 9000,
    '>base_audit_columns',
) }}

-- name_desc base table
{{ macros.single_slots(base_tables.name_desc,
    ("ako", '>base_id_audit_table'),
    ("frame_name", "base_name_desc_table"),
) }}
{{ macros.multi_slot2(base_tables.name_desc, "column", 50,
    '>base_name_column',
    '>base_description_column',
) }}


-- User table
{{ macros.single_slots(tables.user,
     ("ako", '>base_id_table'),
     ("table_name", "User"),
) }}
{{ macros.multi_slot2(tables.user, "column", 100,
     '>user_login_column',
     '>user_password_column',
     '>user_name_column',
     '>user_email_column',
) }}

-- login
{{ macros.single_slots(user.login,
     ("ako", '>base_name_column'),
     ("frame_name", 'user_login_column'),
     ("name", "login"),
) }}

-- password
{{ macros.single_slots(user.password,
     ("ako", '>base_password_column'),
     ("frame_name", 'user_password_column'),
) }}

-- name
{{ macros.single_slots(user.name,
     ("ako", '>base_name_column'),
     ("frame_name", 'user_name_column'),
) }}

-- email
{{ macros.single_slots(user.email,
     ("ako", '>base_email_column'),
     ("frame_name", 'user_email_column'),
) }}
{{ macros.insert("Slot", "frame_id, name, value",
                 '{}, "null", False'.format(user.email)) }}
{{ macros.insert("Slot_versions", "slot_id, version_id",
                 'last_insert_rowid(), 5') }}
{{ macros.insert("Slot", "frame_id, name, value",
                 '{}, "null", True'.format(user.email)) }}
{{ macros.insert("Slot_versions", "slot_id, version_id",
                 'last_insert_rowid()', 2, 5) }}



-- Version table
{{ macros.single_slots(tables.version,
     ("ako", '>base_name_desc_table'),
     ("table_name", "Version"),
) }}
{{ macros.multi_slot2(tables.version, "column", 100,
     '>version_status_column',
) }}

-- status
{{ macros.single_slots(version.status,
     ("ako", '>base_string_no_html_chars_column'),
     ("frame_name", "version_status_column"),
     ("name", "status"),
     ("max_len", 40),
     ("default", "proposed"),
) }}


{%- endautoescape %}
